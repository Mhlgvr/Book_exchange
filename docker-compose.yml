services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME:-books_exchange}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_NAME: ${DB_NAME:-books_exchange}
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      FLASK_ENV: ${FLASK_ENV:-development}
      FLASK_DEBUG: ${FLASK_DEBUG:-True}
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
    command: ["python", "app.py"]

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:5001}

volumes:
  pgdata: 