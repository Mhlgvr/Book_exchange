#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
"""

import subprocess
import sys
import os

def run_backend_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ backend"""
    print("üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ backend...")
    try:
        result = subprocess.run([
            sys.executable, '-m', 'unittest', 'discover', '-s', 'backend', '-p', 'test_*.py', '-v'
        ], cwd='backend', capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç—ã backend –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
            print(result.stdout)
        else:
            print("‚ùå –¢–µ—Å—Ç—ã backend –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ backend: {e}")
        return False
    return True

def run_frontend_tests():
    """–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ frontend"""
    print("üé® –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ frontend...")
    try:
        result = subprocess.run([
            'npm', 'test', '--', '--watchAll=false', '--coverage'
        ], cwd='frontend', capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç—ã frontend –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
            print(result.stdout)
        else:
            print("‚ùå –¢–µ—Å—Ç—ã frontend –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ frontend: {e}")
        return False
    return True

def run_integration_tests():
    """–ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤"""
    print("üîó –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤...")
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        subprocess.run(['docker', 'compose', 'up', '-d'], check=True)
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
        import time
        time.sleep(10)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã API
        result = subprocess.run([
            sys.executable, '-m', 'unittest', 'test_api.py', '-v'
        ], cwd='backend', capture_output=True, text=True)
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        subprocess.run(['docker', 'compose', 'down'], check=True)
        
        if result.returncode == 0:
            print("‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
            print(result.stdout)
        else:
            print("‚ùå –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
            print(result.stderr)
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤: {e}")
        return False
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞")
    print("=" * 50)
    
    success = True
    
    # –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤ backend
    if not run_backend_tests():
        success = False
    
    # –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ frontend
    if not run_frontend_tests():
        success = False
    
    # –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤
    if not run_integration_tests():
        success = False
    
    print("=" * 50)
    if success:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        sys.exit(0)
    else:
        print("üí• –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å!")
        sys.exit(1)

if __name__ == '__main__':
    main() 